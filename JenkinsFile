pipeline {
  agent any
  tools {
     maven 'Maven'
    }
  stages {
    stage ('Initialize') {
      steps {
        sh '''
                echo "PATH = ${PATH}"
                echo "M2_HOME = ${M2_HOME}"
            '''
     }
   }

    stage ('Check-GitRepo-Secrets-TruffleHog') {
      steps {
        sh 'rm trufflehog || true'
        sh 'docker run gesellix/trufflehog --json https://github.com/jkkathi1/webapp.git > trufflehog'
        sh 'cat trufflehog'
      }
    }

    stage ('Check Source Libraries - Composition Analysis-OWASP') {
      steps {
         sh 'rm owasp* || true'
         sh 'wget "https://raw.githubusercontent.com/jkkathi1/webapp/master/owasp-dependency-check.sh" '
         sh 'chmod +x owasp-dependency-check.sh'
         sh 'bash owasp-dependency-check.sh'
         sh 'cat /var/lib/jenkins/OWASP-Dependency-Check/reports/dependency-check-report.xml'
        
      }
    }

    stage ('Sonarqube SAST') {
      steps {
        withSonarQubeEnv('sonar') {
          sh 'mvn sonar:sonar'
          sh 'cat target/sonar/report-task.txt'
        }
      }
    }

    stage ('Build') {
        steps {
        
          sh '/usr/share/maven/bin/mvn clean package'
    }
 
    }

    stage ('Deploy-To-Tomcat') {
          steps {
            sshagent(['tomcat']) {
                sh 'scp -o StrictHostKeyChecking=no target/*.war ubuntu@3.91.234.29:/opt/tomcat/webapps/webapp.war'
              }      
           }       
    }

    
  }
}
